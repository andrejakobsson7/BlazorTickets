@page "/"
@using BlazorTicketsApp.Services
@using Shared.Models
@inject ITicketService ticketService
@inject ITagService tagService
@inject IResponseService responseService

<PageTitle>Home</PageTitle>
@* 
<h1>Ticket!</h1>



@if(allTickets != null)
{
   <div class="row">
   @foreach (TicketModel ticket in allTickets)
   {
    <div class="col-5">
                <a href="/tickets/@ticket.Id"><h1>@ticket.Title</h1></a>
                <h2>@ticket.Description</h2>
                <h3>@ticket.SubmittedBy</h3>
                <h4>@ticket.IsResolved</h4>
    </div>
   }
    </div>
}
else
{
    <h2>No tickets are found</h2>
}



<EditForm Model="ticketModel" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="ticketModel.SubmittedBy" placeholder="Submitted by"></InputText>
    <InputText @bind-Value="ticketModel.Title" placeholder="Title"></InputText>
    <InputText @bind-Value="ticketModel.Description" placeholder="Description"></InputText>

    <br />
    <input class="btn btn-primary" type="submit" value="Submit">
    <br />
    <br />
    <label>Solved?</label>
    <br />
    <InputCheckbox @bind-Value="ticketModel.IsResolved" />
    <h6>Subject</h6>
    <InputSelect @bind-Value="subject" placeholder="Subject">
        @foreach (var tag in Enum.GetValues(typeof(Tag)))
        {
            <option value="@tag">@tag</option>
        }
    </InputSelect>
</EditForm> *@



@code {

    private TicketModel ticketModel { get; set; } = new();
    private Tag subject { get; set; }

	private List<TicketModel> allTickets;
	private List<TagModel> allTags;
	private List<ResponseModel> allResponses;
	protected override async Task OnInitializedAsync()
	{
		allTickets = await ticketService.GetAllTicketsAsync();
		allTags = await tagService.GetAllTagsAsync();
		allResponses = await responseService.GetAllResponsesAsync();
	}



    private async Task HandleSubmit()
    {
       

    public async Task HandleSubmit()
    {

    }
}

