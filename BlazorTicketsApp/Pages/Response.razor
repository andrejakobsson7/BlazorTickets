@page "/response/{id:int}"
@using BlazorTicketsApp.Services
@using Shared.Models
@inject ITicketService ticketService
@inject IResponseService responseService

<h3>Would you like to responde?</h3>

<div>

	@if(ticket != null)
	{
		<h1>@ticket.Title</h1>
		<h5 class="text-success"> Description: </h5>
		<h3>@ticket.Description</h3>
		<h3 class="text-success"> Submitted by:</h3>
		<h3> @ticket.SubmittedBy</h3>
		foreach(ResponseModel response in response)
		{
			<h2>@response.Response</h2>	
		}

	}
</div>

<EditForm Model="newResponse" OnValidSubmit="HandleSubmit">
	<InputText @bind-Value="newResponse.Response" placeholder="Respond"></InputText>
	<InputText @bind-Value="newResponse.SubmittedBy" placeholder="Submitted by"></InputText>
	<input class="btn btn-primary" type="submit" value="Submit">
</EditForm>




@code {

	[Parameter]
	public int Id { get; set; }

	private TicketModel? ticket;
	private List<ResponseModel>? response;
	private ResponseModel newResponse { get; set; } = new();



	protected override async Task OnParametersSetAsync()
	{
		ticket = await ticketService.GetTicketByIdAsync(Id);
		response = await responseService.GetAllResponsesByTicketIdAsync(Id);
	}

	

	private async Task HandleSubmit()
	{
		await responseService.AddResponseAsync(newResponse);
		response = await responseService.GetAllResponsesByTicketIdAsync(Id);
		StateHasChanged();
		newResponse = new ResponseModel(); // Clear the form after submission
	}

	}



